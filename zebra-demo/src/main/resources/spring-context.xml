<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="config.properties"/>
    <context:component-scan base-package="com.duan.zebrademo.dao"/>

    <!--单数据源配置-->
    <bean id="dataSource" class="com.dianping.zebra.single.jdbc.SingleDataSource" init-method="init"
          destroy-method="close">

        <!--必填，填写atlas的地址-->
        <property name="jdbcUrl" value="${jdbcUrl}"/>

        <!--必填，填写atlas的用户名-->
        <property name="user" value="${user}"/>

        <!--必填，填写atlas的密码-->
        <property name="password" value="${password}"/>

        <!-- 选填，默认值为"c3p0",还支持"tomcat-jdbc"或者"druid"-->
        <property name="driverClass" value="${jdbcDriver}"/>
        <property name="poolType" value="c3p0"/>

        <!-- c3p0的minPoolSize,该值对应tomcat-jdbc或druid的"minIdle" -->
        <property name="minPoolSize" value="5"/>

        <!-- c3p0的maxPoolSize,该值对应tomcat-jdbc或druid的"maxActive" -->
        <property name="maxPoolSize" value="30"/>

        <!-- c3p0的initialPoolSize,该值对应tomcat-jdbc或druid的"initialSize" -->
        <property name="initialPoolSize" value="5"/>

        <!-- c3p0的checkoutTimeout,该值对应tomcat-jdbc或druid的"maxWait" -->
        <property name="checkoutTimeout" value="1000"/>
        <property name="maxIdleTime" value="1800"/>
        <property name="idleConnectionTestPeriod" value="60"/>
        <property name="acquireRetryAttempts" value="3"/>
        <property name="acquireRetryDelay" value="300"/>
        <property name="maxStatements" value="0"/>
        <property name="maxStatementsPerConnection" value="100"/>
        <property name="numHelperThreads" value="6"/>
        <property name="maxAdministrativeTaskTime" value="5"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
    </bean>

    <bean id="zebraDS" class="com.dianping.zebra.shard.jdbc.ShardDataSource" init-method="init">
        <property name="dataSourcePool">
            <map>
                <entry key="db" value-ref="dataSource"/>
            </map>
        </property>
        <property name="routerFactory">
            <bean class="com.dianping.zebra.shard.router.builder.XmlResourceRouterBuilder">
                <constructor-arg value="spring/shard/router-local-rule.xml"/>
            </bean>
        </property>

        <!--业务自行调整并发查询的线程池参数 -->
        <property name="parallelCorePoolSize" value="16"/>
        <!--业务自行调整并发查询的线程池参数 -->
        <property name="parallelMaxPoolSize" value="32"/>
        <!--业务自行调整并发查询的线程池参数 -->
        <property name="parallelWorkQueueSize" value="500"/>
        <!--业务自行调整逻辑SQL在线程池里面的超时时间，可以在beta环境设置的大一点 -->
        <property name="parallelExecuteTimeOut" value="3000"/>
    </bean>


    <!--sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="zebraDS"/>
        <!--mybatis 全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--别名所对应的实体类-->
        <property name="typeAliasesPackage" value="com.duan.zebrademo.entity"/>
        <!--sql 与 dao 的映射文件-->
        <property name="mapperLocations" value="classpath:mapper/**"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--需要扫描的 dao 所在包-->
        <property name="basePackage" value="com.duan.zebrademo.dao"/>
    </bean>

</beans>